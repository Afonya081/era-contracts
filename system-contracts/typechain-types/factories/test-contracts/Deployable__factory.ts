/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  Deployable,
  DeployableInterface,
} from "../../test-contracts/Deployable";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Deployed",
    type: "event",
  },
] as const;

const _bytecode =
  "0x000200000000000200010000000103550000006001100270000000210010019d0000000101200190000000760000613d0000008001000039000000400010043f000000bf010000390000000002100031000000200100008a000000000212016f0000002203200041000000230330009c000000150000213d000000270100004100000000001004350000004101000039000000040010043f00000028010000410000007f00010430000000400020043f0000000002000031000000800020043f00000000030000310000001f023000390000000502200272000000260000613d000000010330036700000000040000190000000505400210000000000653034f000000000606043b000000a00550003900000000006504350000000104400039000000000524004b0000001e0000413d000000000200004b000000280000613d000000010200036700000000040000310000001f0340018f0000000504400272000000360000613d00000000050000190000000506500210000000000762034f000000000707043b000000a00660003900000000007604350000000105500039000000000645004b0000002e0000413d000000000503004b000000450000613d0000000504400210000000000242034f0000000303300210000000a004400039000000000504043300000000053501cf000000000535022f000000000202043b0000010003300089000000000232022f00000000023201cf000000000252019f0000000000240435000000400200043d000000200320003900000000040004160000004005000039000000000053043500000000004204350000004004200039000000800300043d00000000003404350000006004200039000000000503004b000000590000613d00000000050000190000000006450019000000a007500039000000000707043300000000007604350000002005500039000000000635004b000000520000413d000000000443001900000000000404350000007f03300039000000000113016f0000002103000041000000210420009c00000000020380190000004002200210000000210410009c00000000010380190000006001100210000000000121019f0000000002000414000000210420009c0000000002038019000000c002200210000000000112019f00000024011001c70000800d0200003900000001030000390000002504000041007d00780000040f0000000101200190000000760000613d00000020010000390000010000100443000001200000044300000026010000410000007e0001042e00000000010000190000007f000104300000007b002104210000000102000039000000000001042d0000000002000019000000000001042d0000007d000004320000007e0001042e0000007f00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff000000000000007f020000000000000000000000000000000000000000000000000000000000000081877aef325fcaf4d37b3982af46756e639f7c8d87ba441191deee76618494cb00000002000000000000000000000000000000400000010000000000000000004e487b7100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002400000000000000000000000000000000000000000000000000000000000000000000000000000000000000001cec2380f6cf2bc1e66d0745724f85dc76e3718ccd29a4f6cbf3e3c5b8935df1";

type DeployableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeployableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Deployable__factory extends ContractFactory {
  constructor(...args: DeployableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Deployable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Deployable__factory {
    return super.connect(runner) as Deployable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeployableInterface {
    return new Interface(_abi) as DeployableInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Deployable {
    return new Contract(address, _abi, runner) as unknown as Deployable;
  }
}
