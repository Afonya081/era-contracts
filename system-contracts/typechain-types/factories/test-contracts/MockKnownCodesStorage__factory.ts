/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockKnownCodesStorage,
  MockKnownCodesStorageInterface,
} from "../../test-contracts/MockKnownCodesStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "bytecodeHash",
        type: "bytes32",
      },
    ],
    name: "MockBytecodePublished",
    type: "event",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "getMarker",
    outputs: [
      {
        internalType: "uint256",
        name: "marker",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytecodeHash",
        type: "bytes32",
      },
    ],
    name: "markBytecodeAsPublished",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x000200000000000200010000000103550000006001100270000000180010019d0000008001000039000000400010043f0000000101200190000000330000c13d0000000001000031000000040110008c0000003b0000413d0000000101000367000000000101043b000000e0011002700000001a0210009c000000400000613d0000001b0110009c0000003b0000c13d0000000001000416000000000101004b000000510000c13d000000040100008a00000000011000310000001c02000041000000200310008c000000000300001900000000030240190000001c01100197000000000401004b000000000200a0190000001c0110009c00000000010300190000000001026019000000000101004b000000510000c13d00000004010000390000000101100367000000000501043b00000018010000410000000002000414000000180320009c0000000001024019000000c0011002100000001d011001c70000800d0200003900000002030000390000001e04000041005c00570000040f0000000101200190000000510000613d0000003e0000013d0000000001000416000000000101004b000000510000c13d00000020010000390000010000100443000001200000044300000019010000410000005d0001042e0000000001000416000000000101004b000000510000c13d00000000010000190000005d0001042e0000000001000416000000000101004b000000510000c13d000000040100008a00000000011000310000001c02000041000000200310008c000000000300001900000000030240190000001c01100197000000000401004b000000000200a0190000001c0110009c00000000010300190000000001026019000000000101004b000000530000613d00000000010000190000005e000104300000000101000039000000800010043f0000001f010000410000005d0001042e0000005a002104210000000102000039000000000001042d0000000002000019000000000001042d0000005c000004320000005d0001042e0000005e00010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000000000000000000000000000000000000000000000000000000000004c6314f00000000000000000000000000000000000000000000000000000000079c4f929800000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000005052d6b67362e3489640132e32e18e4c08d534174096474a05021d3526a693c3000000000000000000000000000000000000002000000080000000000000000030bf529a64efc89ebe97e0e65684f1f5c5d76a6243d27f6a2bee7646698ae2f4";

type MockKnownCodesStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockKnownCodesStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockKnownCodesStorage__factory extends ContractFactory {
  constructor(...args: MockKnownCodesStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockKnownCodesStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MockKnownCodesStorage__factory {
    return super.connect(runner) as MockKnownCodesStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockKnownCodesStorageInterface {
    return new Interface(_abi) as MockKnownCodesStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockKnownCodesStorage {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MockKnownCodesStorage;
  }
}
