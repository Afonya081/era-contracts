/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockL1Messenger,
  MockL1MessengerInterface,
} from "../../test-contracts/MockL1Messenger";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "bytecodeHash",
        type: "bytes32",
      },
    ],
    name: "MockBytecodeL1Published",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_bytecodeHash",
        type: "bytes32",
      },
    ],
    name: "requestBytecodeL1Publication",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "sendToL1",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x0002000000000002000100000001035500000060011002700000001e0010019d0000008001000039000000400010043f0000000101200190000000340000c13d0000000001000031000000040110008c0000006a0000413d0000000101000367000000000101043b000000e001100270000000200210009c0000003c0000613d000000210110009c0000006a0000c13d0000000001000416000000000101004b0000006a0000c13d000000040100008a00000000011000310000002202000041000000200310008c000000000300001900000000030240190000002201100197000000000401004b000000000200a019000000220110009c00000000010300190000000001026019000000000101004b0000006a0000c13d00000004010000390000000101100367000000000501043b0000001e0100004100000000020004140000001e0320009c0000000001024019000000c00110021000000025011001c70000800d02000039000000020300003900000026040000410074006f0000040f00000001012001900000006a0000613d0000000001000019000000750001042e0000000001000416000000000101004b0000006a0000c13d0000002001000039000001000010044300000120000004430000001f01000041000000750001042e0000000001000416000000000101004b0000006a0000c13d0000000001000031000000040210008a0000002203000041000000200420008c000000000400001900000000040340190000002202200197000000000502004b000000000300a019000000220220009c00000000020400190000000002036019000000000202004b0000006a0000c13d00000001030003670000000402300370000000000202043b000000230420009c0000006a0000213d00000023042000390000002205000041000000000614004b0000000006000019000000000605801900000022071001970000002204400197000000000874004b0000000005008019000000000474013f000000220440009c00000000040600190000000004056019000000000404004b0000006a0000c13d0000000404200039000000000343034f000000000303043b000000230430009c0000006a0000213d00000000023200190000002402200039000000000112004b0000006c0000a13d00000000010000190000007600010430000000800000043f0000002401000041000000750001042e00000072002104210000000102000039000000000001042d0000000002000019000000000001042d0000007400000432000000750001042e0000007600010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000062f84b240000000000000000000000000000000000000000000000000000000039b34c6e8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff00000000000000000000000000000000000000200000008000000000000000000200000000000000000000000000000000000000000000000000000000000000f4e73e04ff02fa42663967e188b0b70336fa153c8f297bc50d38a8c20b8d14520000000000000000000000000000000000000000000000000000000000000000a6556654326618073186e78c01e1b6c092364ad754cb62ad43db8b1f65396473";

type MockL1MessengerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockL1MessengerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockL1Messenger__factory extends ContractFactory {
  constructor(...args: MockL1MessengerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockL1Messenger & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockL1Messenger__factory {
    return super.connect(runner) as MockL1Messenger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockL1MessengerInterface {
    return new Interface(_abi) as MockL1MessengerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockL1Messenger {
    return new Contract(address, _abi, runner) as unknown as MockL1Messenger;
  }
}
