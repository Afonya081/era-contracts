/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  NotSystemCaller,
  NotSystemCallerInterface,
} from "../../test-contracts/NotSystemCaller";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
] as const;

const _bytecode =
  "0x00040000000000020002000000000002000000000301001900000060033002700000003a04300197000300000041035500020000000103550000003a0030019d000100000000001f00000001012001900000005b0000c13d0000008001000039000000400010043f000000020100036700000000020000310000001f0320018f00000005022002720000001a0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000524004b000000130000413d000000000403004b000000280000613d00000003033002100000000502200210000000000402043300000000043401cf000000000434022f000000000121034f000000000101043b0000010003300089000000000131022f00000000013101cf000000000141019f00000000001204350000000001000031000100000001001d0000000001000416000200000001001d000000410100004100000000001004390000000001000412000000040010044300000024000004430000003a0100004100000000020004140000003a0320009c0000000001024019000000c00110021000000042011001c7000080050200003900e200dd0000040f0000000102200190000000a30000613d000000000401043b0000000001000414000000040240008c0000006a0000c13d000000030100036700000001020000310000001f0320018f00000005022002720000004c0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000524004b000000450000413d000000000403004b000000c90000613d00000003033002100000000502200210000000000402043300000000043401cf000000000434022f000000000121034f000000000101043b0000010003300089000000000131022f00000000013101cf000000000141019f0000000000120435000000c90000013d0000000001000416000000000101004b000000a30000c13d0000000001000031000000bf02100039000000200300008a000000000232016f0000003b0320009c000000770000413d0000003f0100004100000000001004350000004101000039000000040010043f0000004001000041000000e4000104300000003a020000410000003a0310009c0000000001028019000000c0011002100000000102000029000000600220021000000000012100190000000203000029000000000203004b000000a50000c13d000000000204001900e200d80000040f000000a90000013d000000400020043f0000001f0210018f00000002030003670000000504100272000000850000613d00000000050000190000000506500210000000000763034f000000000707043b000000a00660003900000000007604350000000105500039000000000645004b0000007d0000413d000000000502004b000000940000613d0000000504400210000000000343034f0000000302200210000000a004400039000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000003c02000041000000200310008c000000000300001900000000030240190000003c01100197000000000401004b000000000200a0190000003c0110009c00000000010300190000000001026019000000000101004b000000a30000c13d000000a00100043d0000003d0210009c000000cf0000a13d0000000001000019000000e40001043000000043011000410000800902000039000000000500001900e200d80000040f0003000000010355000000000301001900000060043002700000001f0340018f0001003a0040019d0000003a044001970000000504400272000000b90000613d00000000050000190000000506500210000000000761034f000000000707043b00000000007604350000000105500039000000000645004b000000b20000413d000000000503004b000000c70000613d00000003033002100000000504400210000000000504043300000000053501cf000000000535022f000000000141034f000000000101043b0000010003300089000000000131022f00000000013101cf000000000151019f00000000001404350000000101200190000000cc0000613d000000600100003900000001011001ff000000e30001042e000000600100003900000001011001ff000000e400010430000000800010043f0000014000000443000001600010044300000020010000390000010000100443000000010100003900000120001004430000003e01000041000000e30001042e000000db002104210000000102000039000000000001042d0000000002000019000000000001042d000000e0002104230000000102000039000000000001042d0000000002000019000000000001042d000000e200000432000000e30001042e000000e40001043000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000100000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff00000002000000000000000000000000000000800000010000000000000000004e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000310ab089e4439a4c15d089f94afb7896ff553aecb10793d0ab882de59d99a32e0200000200000000000000000000000000000044000000000000000000000000020000000000000000000000000000000000000000000000000000000000000082ea4be08c5bec65fa893dd465f63a33ff6a2ee65fb75c04fca5370fea84fd28";

type NotSystemCallerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NotSystemCallerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NotSystemCaller__factory extends ContractFactory {
  constructor(...args: NotSystemCallerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _to: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_to, overrides || {});
  }
  override deploy(
    _to: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_to, overrides || {}) as Promise<
      NotSystemCaller & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NotSystemCaller__factory {
    return super.connect(runner) as NotSystemCaller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NotSystemCallerInterface {
    return new Interface(_abi) as NotSystemCallerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NotSystemCaller {
    return new Contract(address, _abi, runner) as unknown as NotSystemCaller;
  }
}
