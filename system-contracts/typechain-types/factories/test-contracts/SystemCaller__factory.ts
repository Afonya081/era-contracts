/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SystemCaller,
  SystemCallerInterface,
} from "../../test-contracts/SystemCaller";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
] as const;

const _bytecode =
  "0x0004000000000002000100000000000200000000030100190000006003300270000000480430019700030000004103550002000000010355000000480030019d000100000000001f0000000101200190000000650000c13d0000008001000039000000400010043f0000000001000414000100000001001d0000004d01000041000000000010043900000000010004120000000400100443000000240000044300000048010000410000000002000414000000480320009c0000000001024019000000c0011002100000004e011001c70000800502000039011901140000040f0000000102200190000000e40000613d000000000401043b00000000010004160000003f020000390000000002200031000000200300008a000000000532016f0000004f03100197000000400100043d0000000002150019000000000552004b00000000050000190000000105004039000000500620009c0000006e0000213d00000001055001900000006e0000c13d000000400020043f00000000020000310000000002210436000000020500036700000000070000310000001f0670018f00000005077002720000003f0000613d00000000080000190000000509800210000000000a920019000000000995034f000000000909043b00000000009a04350000000108800039000000000978004b000000370000413d000000000806004b0000004e0000613d0000000507700210000000000575034f00000000077200190000000306600210000000000807043300000000086801cf000000000868022f000000000505043b0000010006600089000000000565022f00000000056501cf000000000585019f0000000000570435000000000520003100000000000504350000000001010433000000510510009c000000a90000413d000000400100043d000000440210003900000057030000410000000000320435000000240210003900000008030000390000000000320435000000580200004100000000002104350000000402100039000000200300003900000000003204350000004802000041000000480310009c0000000001028019000000400110021000000059011001c70000011b000104300000000001000416000000000101004b000000e40000c13d0000000001000031000000bf02100039000000200300008a000000000232016f000000490320009c000000740000413d0000005a0100004100000000001004350000004101000039000000040010043f0000005b010000410000011b00010430000000400020043f0000001f0210018f00000002030003670000000504100272000000820000613d00000000050000190000000506500210000000000763034f000000000707043b000000a00660003900000000007604350000000105500039000000000645004b0000007a0000413d000000000502004b000000910000613d0000000504400210000000000343034f0000000302200210000000a004400039000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000004a02000041000000200310008c000000000300001900000000030240190000004a01100197000000000401004b000000000200a0190000004a0110009c00000000010300190000000001026019000000000101004b000000e40000c13d000000a00100043d0000004b0210009c000000e40000213d000000800010043f0000014000000443000001600010044300000020010000390000010000100443000000010100003900000120001004430000004c010000410000011a0001042e000000400220021000000052022001970000000105000029000000c0055002100000005305500197000000000225019f00000060011002100000005401100197000000000112019f00000055011001c7000000000203004b000000bc0000c13d000000000204001900000000030000190000000004000019000000000500001900000000060000190119010f0000040f000000c00000013d0000800902000039000000010500003900000000060000190119010f0000040f00030000000103550000006001100270000100480010019d00000048041001970000003f014000390000005605100197000000400100043d0000000003150019000000000553004b00000000050000190000000105004039000000500630009c0000006e0000213d00000001055001900000006e0000c13d000000400030043f00000000034104360000001f054000390000000505500272000000df0000613d00000000060000310000000206600367000000000700001900000005087002100000000009830019000000000886034f000000000808043b00000000008904350000000107700039000000000857004b000000d70000413d000000000500004b000000e10000613d0000000105000031000000000554004b000000e60000a13d00000000010000190000011b0001043000000003060003670000001f0540018f0000000504400272000000f30000613d000000000700001900000005087002100000000009830019000000000886034f000000000808043b00000000008904350000000107700039000000000847004b000000eb0000413d000000000705004b000001020000613d0000000504400210000000000646034f00000000044300190000000305500210000000000704043300000000075701cf000000000757022f000000000606043b0000010005500089000000000656022f00000000055601cf000000000575019f000000000054043500000000010104330000004804000041000000480510009c0000000001048019000000480530009c000000000304801900000040033002100000006001100210000000000131019f00000001022001900000010e0000613d0000011a0001042e0000011b0001043000000112002104210000000102000039000000000001042d0000000002000019000000000001042d00000117002104230000000102000039000000000001042d0000000002000019000000000001042d00000119000004320000011a0001042e0000011b00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000100000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000200000000000000000000000000000080000001000000000000000000310ab089e4439a4c15d089f94afb7896ff553aecb10793d0ab882de59d99a32e020000020000000000000000000000000000004400000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000ffffffffffffffff00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000ffffffff000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001ffffffe04f766572666c6f7700000000000000000000000000000000000000000000000008c379a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000640000000000000000000000004e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000000207dc80cb45f0e2d0f8fdae819afc015eb5d44a660d64ee9e8edbdd865190c7";

type SystemCallerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SystemCallerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SystemCaller__factory extends ContractFactory {
  constructor(...args: SystemCallerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _to: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_to, overrides || {});
  }
  override deploy(
    _to: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_to, overrides || {}) as Promise<
      SystemCaller & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SystemCaller__factory {
    return super.connect(runner) as SystemCaller__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SystemCallerInterface {
    return new Interface(_abi) as SystemCallerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SystemCaller {
    return new Contract(address, _abi, runner) as unknown as SystemCaller;
  }
}
